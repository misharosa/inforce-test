{"version":3,"sources":["components/Card.tsx","App.tsx","index.jsx"],"names":["Card","item","onDelete","React","useState","modalIsOpen","setIsOpen","className","src","imageUrl","alt","name","onClick","id","isOpen","contentLabel","App","state","product","ItemsFromServer","visibleError","handleName","event","value","target","setState","handleImageUrl","prevState","handleSubmit","preventDefault","newProduct","length","handleDelete","itemId","filter","this","map","onSubmit","placeholder","onChange","style","color","fontSize","type","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qkCASaA,EAAuB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEzC,EAAiCC,IAAMC,UAAS,GAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,OACI,mCACI,sBAAKC,UAAU,0BAAf,UACI,qBACIC,IAAKP,EAAKQ,SACVF,UAAU,YACVG,IAAI,oBAEJ,oBAAIH,UAAU,cAAd,SACKN,EAAKU,OAEd,wBAAQC,QAAS,WAAOV,EAASD,EAAKY,KAAtC,oBACA,eAAC,IAAD,CACIC,OAAQT,EACRU,aAAa,gBAFjB,UAII,uCACA,wBACIH,QAAS,kBAAMN,GAAU,IAD7B,mBAKA,+CACA,iCACI,0BACA,gE,QC/BXU,EAAb,4MAEIC,MAAO,CACHC,QAASC,EACTd,aAAa,EACbM,KAAM,GACNF,SAAU,GACVW,cAAc,GAPtB,EAUIC,WAAa,SAACC,GACV,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CAAEd,KAAMY,KAb9B,EAgBIG,eAAiB,SAACJ,GACd,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CAAEhB,SAAUc,KAnBlC,EAsBIjB,UAAY,WACR,EAAKmB,UAAS,SAACE,GAAD,MAAoB,CAC9BtB,aAAcsB,EAAUtB,iBAxBpC,EA4BIuB,aAAe,SAACN,GACZA,EAAMO,iBACN,MAAoC,EAAKZ,MAAjCN,EAAR,EAAQA,KACFmB,EAAa,CAACnB,OAAMF,SAD1B,EAAcA,SACsBI,GADpC,EAAwBK,QACwBa,OAAS,GAErDpB,EAAKoB,OAAS,EACd,EAAKN,UAAS,SAACE,GAAD,MAAoB,CAC9BT,QAAQ,GAAD,mBAAMS,EAAUT,SAAhB,CAAyBY,IAChCzB,aAAa,EACbe,cAAc,EACdT,KAAM,GACNF,SAAU,OAGd,EAAKgB,SAAS,CAAEL,cAAc,KA1C1C,EA8CIY,aAAe,SAACC,GACZ,IAAQf,EAAY,EAAKD,MAAjBC,QAER,EAAKO,SAAS,CACVP,QAASA,EAAQgB,QAAO,SAAAjC,GAAI,OAAIA,EAAKY,KAAOoB,QAlDxD,4CAsDA,WAAU,IAAD,OACL,EAA+DE,KAAKlB,MAA5DZ,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,KAAMO,EAA3B,EAA2BA,QAAST,EAApC,EAAoCA,SAAUW,EAA9C,EAA8CA,aAE9C,OACI,gCACI,wBAAQR,QAASuB,KAAK7B,UAAtB,iBAEIY,EAAQkB,KAAI,SAACnC,GAAD,OAAc,cAAC,EAAD,CAEtBA,KAAMA,EACNC,SAAU,EAAK8B,cAFV/B,EAAKY,OAKlB,eAAC,IAAD,CACIC,OAAQT,EACRU,aAAa,gBAFjB,UAII,uCACA,wBACIH,QAASuB,KAAK7B,UADlB,mBAKA,+CACA,uBAAM+B,SAAUF,KAAKP,aAArB,UACI,gCACI,uBACAU,YAAY,UACZf,MAAOZ,EACP4B,SAAU,SAACjB,GAAD,OAAW,EAAKD,WAAWC,MAErC,uBACCF,GACD,sBAAMoB,MAAO,CAAEC,MAAO,MAAOC,SAAU,QAAvC,sCAGJ,8BACI,uBACIJ,YAAY,eACZf,MAAOd,EACP8B,SAAU,SAACjB,GAAD,OAAW,EAAKI,eAAeJ,QAGjD,wBACIqB,KAAK,SADT,mCAjGpB,GAAyBxC,IAAMyC,WCF/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.63ec5590.chunk.js","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\nimport { Item } from \"../types/type\";\n\ntype Props = {\n    item: Item\n    onDelete: (itemId: number) => void\n}\n\nexport const Card:React.FC<Props> = ({ item, onDelete }) => {\n\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    return (\n        <>\n            <div className=\"card main-content__card\">\n                <img\n                    src={item.imageUrl}\n                    className=\"card__img\"\n                    alt=\"some photo here\"\n                />\n                    <h2 className=\"card__title\">\n                        {item.name}\n                    </h2>\n                <button onClick={() => {onDelete(item.id)}}>Delete</button>\n                <Modal\n                    isOpen={modalIsOpen}\n                    contentLabel=\"Example Modal\"\n                >\n                    <h2>Hello</h2>\n                    <button\n                        onClick={() => setIsOpen(false)\n                    }>\n                        close\n                    </button>\n                    <div>I am a modal</div>\n                    <form>\n                        <input />\n                        <button>tab navigation</button>\n                    </form>\n                </Modal>\n            </div>\n        </>)\n};\n","import './App.scss'\nimport { Card } from './components/Card';\nimport Modal from 'react-modal';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport ItemsFromServer from './data/products.json'\n\nexport class App extends React.Component<any, any> {\n\n    state= {\n        product: ItemsFromServer,\n        modalIsOpen: false,\n        name: '',\n        imageUrl: '',\n        visibleError: false,\n    }\n\n    handleName = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n\n        this.setState({ name: value })\n    }\n\n    handleImageUrl = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target\n\n        this.setState({ imageUrl: value })\n    }\n\n    setIsOpen = () => {\n        this.setState((prevState:any) => ({\n            modalIsOpen: !prevState.modalIsOpen\n        }))\n    }\n\n    handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const { name, imageUrl, product } = this.state\n        const newProduct = {name, imageUrl, id: product.length + 1 }\n\n        if (name.length > 0) {\n            this.setState((prevState:any) => ({\n                product: [...prevState.product, newProduct],\n                modalIsOpen: false,\n                visibleError: false,\n                name: '',\n                imageUrl: '',\n            }))\n        } else {\n            this.setState({ visibleError: true})\n        }\n    }\n\n    handleDelete = (itemId: number) => {\n        const { product } = this.state\n\n        this.setState({\n            product: product.filter(item => item.id !== itemId)\n        })\n    }\n\nrender() {\n    const { modalIsOpen, name, product, imageUrl, visibleError } = this.state;\n\n    return (\n        <div>\n            <button onClick={this.setIsOpen}>Add</button>\n            {\n                product.map((item:any) => <Card\n                    key={item.id}\n                    item={item}\n                    onDelete={this.handleDelete}\n                />)\n            }\n            <Modal\n                isOpen={modalIsOpen}\n                contentLabel=\"Example Modal\"\n            >\n                <h2>Hello</h2>\n                <button\n                    onClick={this.setIsOpen}\n                >\n                    close\n                </button>\n                <div>I am a modal</div>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <input\n                        placeholder=\"Name...\"\n                        value={name}\n                        onChange={(event) => this.handleName(event)}\n                        />\n                        <br/>\n                        {visibleError &&\n                        <span style={{ color: 'red', fontSize: '12px'}}>please enter the name</span>\n                        }\n                    </div>\n                    <div>\n                        <input\n                            placeholder=\"add_img_link\"\n                            value={imageUrl}\n                            onChange={(event) => this.handleImageUrl(event)}\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                    >\n                        add item\n                    </button>\n                </form>\n            </Modal>\n        </div>\n    )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}